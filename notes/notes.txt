âœ”Test the project on a flask server without docker
*upload project to git
*upload backend to Heruku

---
Token decoded from byte form:
b'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjQsInVuYW1lIjoicGVibyIsImV4cCI6MTU5NjMwNDAxNi4wMjgzNjN9.OhLBV_MixHrFcnIa_pgMYRwaNTk2JpuwPp_kNnPrL0o'
To ascii form:
ZXlKMGVYQWlPaUpLVjFRaUxDSmhiR2NpT2lKSVV6STFOaUo5LmV5SjFhV1FpT2pRc0luVnVZVzFsSWpvaWNHVmlieUlzSW1WNGNDSTZNVFU1TmpNd05EUTNOaTQ1TlRFMk9URTJmUS45OHBkOXNpd2VJbTlKOWpfWWxMU2IzaTFrWXJIT2pzR1hoSEliOF83ektF
with the line:
token = base64.b64encode(token).decode("ascii")
--

The jwt secret key will initialy be hardcoded.

If token is expired, server will ask client to refresh_token(). If client agrees, then and there,
a new token is established between them. If cliens is not responing to refresh_token() then
the server will discard the old token and ask the cliend to do a login again. 

JWT will contain: uid, uname, exp
exp will be in the form of: ticks since january 1st 1970

The token table does not have to be used. I will instead use JWT for user autherization(not 
authentication, because that is done when the user logs in with username and password)

Login is supposed to be a HTTP POST not HTTP GET

Create a login system(hash pass, create token, save token in db etc) 
and return proper response(rejected or accepted)

----
Goal 1:
Be able to call API via postman to log into a existing account

----

-Python app that notifies me if certain stock price falls a certain level

-Will be running on my rasberypie and will notify my phone if price level has been reached.

-consists of two components, 1. A python script that watches prices in real time and has levels for stocks that it notifies on. 2. A app for android that notifies if the "rasberry pie" wants to alert me of a certain price level being reached in a stock
